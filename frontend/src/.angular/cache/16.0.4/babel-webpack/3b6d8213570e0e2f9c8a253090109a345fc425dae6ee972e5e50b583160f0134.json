{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction AuthPageComponent_p_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nclass AuthPageComponent {\n  constructor(authService, http, router) {\n    this.authService = authService;\n    this.http = http;\n    this.router = router;\n    this.user = {\n      name: '',\n      email: '',\n      password: ''\n    };\n    this.isLoginFailed = false;\n  }\n  onSubmit(formData) {\n    this.http.get('http://localhost:3000/signup').subscribe(response => {\n      const user = response.find(user => {\n        return user.email === this.user.email && user.password === this.user.password;\n      });\n      if (user) {\n        this.authService.setLoggedIn(true);\n        this.router.navigate(['/home']);\n      } else {\n        this.authService.setLoggedIn(false);\n        this.router.navigate(['/auth']);\n        console.log('Invalid email or password');\n        this.isLoginFailed = true;\n      }\n    }, error => {\n      console.error(error);\n    });\n    if (this.authService.isLoggedIn) {\n      this.router.navigate(['/home']);\n    }\n  }\n}\nAuthPageComponent.ɵfac = function AuthPageComponent_Factory(t) {\n  return new (t || AuthPageComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nAuthPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthPageComponent,\n  selectors: [[\"app-auth-page\"]],\n  decls: 27,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\", \"mt-5\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\"], [\"LoginForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"placeholder\", \"Enter your email\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter your password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"mt-3\", \"btn\", \"btn-primary\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"card-footer\", \"text-center\"], [\"routerLink\", \"/signup\"], [1, \"text-danger\"]],\n  template: function AuthPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\");\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"form\", 6, 7);\n      i0.ɵɵlistener(\"ngSubmit\", function AuthPageComponent_Template_form_ngSubmit_8_listener() {\n        i0.ɵɵrestoreView(_r2);\n        const _r0 = i0.ɵɵreference(9);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n      i0.ɵɵtext(12, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function AuthPageComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 11);\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function AuthPageComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 8)(19, \"button\", 13);\n      i0.ɵɵtext(20, \"Login\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(21, AuthPageComponent_p_21_Template, 2, 1, \"p\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 15)(23, \"p\");\n      i0.ɵɵtext(24, \"Not registered? \");\n      i0.ɵɵelementStart(25, \"a\", 16);\n      i0.ɵɵtext(26, \"Create an account\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.is);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AuthPageComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","error","AuthPageComponent","constructor","authService","http","router","user","name","email","password","isLoginFailed","onSubmit","formData","get","subscribe","response","find","setLoggedIn","navigate","console","log","isLoggedIn","ɵɵdirectiveInject","i1","AuthService","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","AuthPageComponent_Template","rf","ctx","ɵɵlistener","AuthPageComponent_Template_form_ngSubmit_8_listener","ɵɵrestoreView","_r2","_r0","ɵɵreference","ɵɵresetView","AuthPageComponent_Template_input_ngModelChange_13_listener","$event","AuthPageComponent_Template_input_ngModelChange_17_listener","ɵɵtemplate","AuthPageComponent_p_21_Template","ɵɵproperty","is"],"sources":["/home/parthkawatra/Desktop/web_projects/angular/angular-forms/src/app/auth-page/auth-page.component.ts","/home/parthkawatra/Desktop/web_projects/angular/angular-forms/src/app/auth-page/auth-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { UserData } from '../user-data';\nimport { AuthService } from '../auth/auth.service';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth-page',\n  templateUrl: './auth-page.component.html',\n  styleUrls: ['./auth-page.component.css']\n})\nexport class AuthPageComponent {\n  user: UserData = {\n    name: '',\n    email: '',\n    password: ''\n  };  \n\n  isLoginFailed = false;\n  \n  constructor(private authService:AuthService, private http:HttpClient, private router:Router) { }\n\n  onSubmit(formData: NgForm): void {\n    this.http.get<any>('http://localhost:3000/signup').subscribe( \n      response => {\n        const user = response.find((user: { email: string; password: string; }) => {  \n          return user.email === this.user.email && user.password === this.user.password;\n        });\n        if (user) {\n          this.authService.setLoggedIn(true);\n          this.router.navigate(['/home']);\n        } else {\n          this.authService.setLoggedIn(false);\n          this.router.navigate(['/auth']);\n          console.log('Invalid email or password');\n          this.isLoginFailed = true;\n        }\n        },\n      error => {\n        console.error(error);\n      }\n    );\n      if(this.authService.isLoggedIn){\n        this.router.navigate(['/home']);\n      }\n  }\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center mt-5\">\n      <div class=\"col-md-6\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h4>Login</h4>\n          </div>\n          <div class=\"card-body\">\n            <form #LoginForm=\"ngForm\" (ngSubmit)=\"onSubmit(LoginForm)\">\n              <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"Enter your email\" [(ngModel)]=\"user.email\" name=\"email\">\n              </div>\n              <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Enter your password\" [(ngModel)]=\"user.password\" name=\"password\">\n              </div>\n              <div class=\"form-group\">\n                <button type=\"submit\" class=\"mt-3 btn btn-primary \">Login</button>\n              </div>\n            </form>\n            <p class=\"text-danger\" *ngIf=\"is\">{{ error }}</p>\n          </div>\n          <div class=\"card-footer text-center\">\n            <p>Not registered? <a routerLink=\"/signup\">Create an account</a></p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}