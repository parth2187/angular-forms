{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nclass AuthPageComponent {\n  constructor(authService, http) {\n    this.authService = authService;\n    this.http = http;\n    this.user = {\n      name: '',\n      email: '',\n      password: ''\n    };\n  }\n  onSubmit(formata) {\n    // Pass the user object to the AuthService for authentication\n    const isLoggedIn = this.authService.login(this.user.email, this.user.password);\n    if (isLoggedIn) {\n      // Authentication success logic\n      console.log('Logged in successfully');\n    } else {\n      // Authentication error logic\n      console.error('Invalid credentials');\n    }\n  }\n}\nAuthPageComponent.ɵfac = function AuthPageComponent_Factory(t) {\n  return new (t || AuthPageComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nAuthPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthPageComponent,\n  selectors: [[\"app-auth-page\"]],\n  decls: 26,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\", \"mt-5\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\"], [\"LoginForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"placeholder\", \"Enter your email\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter your password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"mt-3\", \"btn\", \"btn-primary\"], [1, \"card-footer\", \"text-center\"], [\"routerLink\", \"/signup\"]],\n  template: function AuthPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\");\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"form\", 6, 7);\n      i0.ɵɵlistener(\"ngSubmit\", function AuthPageComponent_Template_form_ngSubmit_8_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(9);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n      i0.ɵɵtext(12, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function AuthPageComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 11);\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function AuthPageComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 8)(19, \"button\", 13);\n      i0.ɵɵtext(20, \"Login\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(21, \"div\", 14)(22, \"p\");\n      i0.ɵɵtext(23, \"Not registered? \");\n      i0.ɵɵelementStart(24, \"a\", 15);\n      i0.ɵɵtext(25, \"Create an account\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AuthPageComponent };","map":{"version":3,"names":["AuthPageComponent","constructor","authService","http","user","name","email","password","onSubmit","formata","isLoggedIn","login","console","log","error","i0","ɵɵdirectiveInject","i1","AuthService","i2","HttpClient","selectors","decls","vars","consts","template","AuthPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AuthPageComponent_Template_form_ngSubmit_8_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","AuthPageComponent_Template_input_ngModelChange_13_listener","$event","AuthPageComponent_Template_input_ngModelChange_17_listener","ɵɵadvance","ɵɵproperty"],"sources":["/home/parthkawatra/Desktop/web_projects/angular/angular-forms/src/app/auth-page/auth-page.component.ts","/home/parthkawatra/Desktop/web_projects/angular/angular-forms/src/app/auth-page/auth-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { UserData } from '../user-data';\nimport { AuthService } from '../auth/auth.service';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-auth-page',\n  templateUrl: './auth-page.component.html',\n  styleUrls: ['./auth-page.component.css']\n})\nexport class AuthPageComponent {\n  user: UserData = {\n    name: '',\n    email: '',\n    password: ''\n  };\n\n  constructor(private authService:AuthService, private http:HttpClient) { }\n\n    \n  onSubmit(formata: NgForm): void {\n    // Pass the user object to the AuthService for authentication\n    const isLoggedIn = this.authService.login(this.user.email, this.user.password);\n\n    if (isLoggedIn) {\n      // Authentication success logic\n      console.log('Logged in successfully');\n    } else {\n      // Authentication error logic\n      console.error('Invalid credentials');\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center mt-5\">\n      <div class=\"col-md-6\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h4>Login</h4>\n          </div>\n          <div class=\"card-body\">\n            <form #LoginForm=\"ngForm\" (ngSubmit)=\"onSubmit(LoginForm)\">\n              <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"Enter your email\" [(ngModel)]=\"user.email\" name=\"email\">\n              </div>\n              <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Enter your password\" [(ngModel)]=\"user.password\" name=\"password\">\n              </div>\n              <div class=\"form-group\">\n                <button type=\"submit\" class=\"mt-3 btn btn-primary \">Login</button>\n              </div>\n            </form>\n          </div>\n          <div class=\"card-footer text-center\">\n            <p>Not registered? <a routerLink=\"/signup\">Create an account</a></p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>"],"mappings":";;;;;AAMA,MAKaA,iBAAiB;EAO5BC,YAAoBC,WAAuB,EAAUC,IAAe;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,IAAI,GAAJA,IAAI;IANzD,KAAAC,IAAI,GAAa;MACfC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;EAEuE;EAGxEC,QAAQA,CAACC,OAAe;IACtB;IACA,MAAMC,UAAU,GAAG,IAAI,CAACR,WAAW,CAACS,KAAK,CAAC,IAAI,CAACP,IAAI,CAACE,KAAK,EAAE,IAAI,CAACF,IAAI,CAACG,QAAQ,CAAC;IAE9E,IAAIG,UAAU,EAAE;MACd;MACAE,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;KACtC,MAAM;MACL;MACAD,OAAO,CAACE,KAAK,CAAC,qBAAqB,CAAC;;EAExC;;AArBWd,iBAAiB,C;mBAAjBA,iBAAiB,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;AAAjBpB,iBAAiB,C;QAAjBA,iBAAiB;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCX9BZ,EAAA,CAAAc,cAAA,aAAuB;MAKPd,EAAA,CAAAe,MAAA,YAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAK;MAEhBhB,EAAA,CAAAc,cAAA,aAAuB;MACKd,EAAA,CAAAiB,UAAA,sBAAAC,oDAAA;QAAAlB,EAAA,CAAAmB,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAArB,EAAA,CAAAsB,WAAA;QAAA,OAAYtB,EAAA,CAAAuB,WAAA,CAAAV,GAAA,CAAApB,QAAA,CAAA4B,GAAA,CAAmB;MAAA,EAAC;MACxDrB,EAAA,CAAAc,cAAA,cAAwB;MACHd,EAAA,CAAAe,MAAA,aAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAChChB,EAAA,CAAAc,cAAA,iBAAwH;MAAtCd,EAAA,CAAAiB,UAAA,2BAAAO,2DAAAC,MAAA;QAAA,OAAAZ,GAAA,CAAAxB,IAAA,CAAAE,KAAA,GAAAkC,MAAA;MAAA,EAAwB;MAA1GzB,EAAA,CAAAgB,YAAA,EAAwH;MAE1HhB,EAAA,CAAAc,cAAA,cAAwB;MACAd,EAAA,CAAAe,MAAA,gBAAQ;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MACtChB,EAAA,CAAAc,cAAA,iBAAwI;MAA5Cd,EAAA,CAAAiB,UAAA,2BAAAS,2DAAAD,MAAA;QAAA,OAAAZ,GAAA,CAAAxB,IAAA,CAAAG,QAAA,GAAAiC,MAAA;MAAA,EAA2B;MAAvHzB,EAAA,CAAAgB,YAAA,EAAwI;MAE1IhB,EAAA,CAAAc,cAAA,cAAwB;MAC8Bd,EAAA,CAAAe,MAAA,aAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAS;MAIxEhB,EAAA,CAAAc,cAAA,eAAqC;MAChCd,EAAA,CAAAe,MAAA,wBAAgB;MAAAf,EAAA,CAAAc,cAAA,aAAwB;MAAAd,EAAA,CAAAe,MAAA,yBAAiB;MAAAf,EAAA,CAAAgB,YAAA,EAAI;;;MAZsBhB,EAAA,CAAA2B,SAAA,IAAwB;MAAxB3B,EAAA,CAAA4B,UAAA,YAAAf,GAAA,CAAAxB,IAAA,CAAAE,KAAA,CAAwB;MAIdS,EAAA,CAAA2B,SAAA,GAA2B;MAA3B3B,EAAA,CAAA4B,UAAA,YAAAf,GAAA,CAAAxB,IAAA,CAAAG,QAAA,CAA2B;;;;;;SDJ1HP,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}