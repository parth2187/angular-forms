{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nclass AuthPageComponent {\n  constructor(authService, http, router) {\n    this.authService = authService;\n    this.http = http;\n    this.router = router;\n    this.user = {\n      name: '',\n      email: '',\n      password: ''\n    };\n  }\n  onSubmit(formData) {\n    // Pass the user object to the AuthService for authentication\n    const isLoggedIn = this.authService.login(this.user.email, this.user.password);\n    this.http.get('http://localhost:3000/signup').subscribe(response => {\n      const user = response.find(user => {\n        return user.email === this.user.email && user.password === this.user.password;\n      });\n    }, error => {\n      console.error(error);\n    });\n    if (isLoggedIn) {\n      // Authentication success logic\n      console.log('Logged in successfully');\n    } else {\n      // Authentication error logic\n      console.error('Invalid credentials');\n    }\n  }\n}\nAuthPageComponent.ɵfac = function AuthPageComponent_Factory(t) {\n  return new (t || AuthPageComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nAuthPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthPageComponent,\n  selectors: [[\"app-auth-page\"]],\n  decls: 26,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\", \"mt-5\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\"], [\"LoginForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"placeholder\", \"Enter your email\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter your password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"mt-3\", \"btn\", \"btn-primary\"], [1, \"card-footer\", \"text-center\"], [\"routerLink\", \"/signup\"]],\n  template: function AuthPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\");\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"form\", 6, 7);\n      i0.ɵɵlistener(\"ngSubmit\", function AuthPageComponent_Template_form_ngSubmit_8_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(9);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n      i0.ɵɵtext(12, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function AuthPageComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 11);\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function AuthPageComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 8)(19, \"button\", 13);\n      i0.ɵɵtext(20, \"Login\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(21, \"div\", 14)(22, \"p\");\n      i0.ɵɵtext(23, \"Not registered? \");\n      i0.ɵɵelementStart(24, \"a\", 15);\n      i0.ɵɵtext(25, \"Create an account\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AuthPageComponent };","map":{"version":3,"names":["AuthPageComponent","constructor","authService","http","router","user","name","email","password","onSubmit","formData","isLoggedIn","login","get","subscribe","response","find","error","console","log","i0","ɵɵdirectiveInject","i1","AuthService","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","AuthPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AuthPageComponent_Template_form_ngSubmit_8_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","AuthPageComponent_Template_input_ngModelChange_13_listener","$event","AuthPageComponent_Template_input_ngModelChange_17_listener","ɵɵadvance","ɵɵproperty"],"sources":["/home/parthkawatra/Desktop/web_projects/angular/angular-forms/src/app/auth-page/auth-page.component.ts","/home/parthkawatra/Desktop/web_projects/angular/angular-forms/src/app/auth-page/auth-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { UserData } from '../user-data';\nimport { AuthService } from '../auth/auth.service';\nimport { NgForm } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth-page',\n  templateUrl: './auth-page.component.html',\n  styleUrls: ['./auth-page.component.css']\n})\nexport class AuthPageComponent {\n  user: UserData = {\n    name: '',\n    email: '',\n    password: ''\n  };\n\n  constructor(private authService:AuthService, private http:HttpClient, private router:Router) { }\n\n    \n  onSubmit(formData: NgForm): void {\n    // Pass the user object to the AuthService for authentication\n    const isLoggedIn = this.authService.login(this.user.email, this.user.password);\n    this.http.get<any>('http://localhost:3000/signup').subscribe( \n      response => {\n        const user = response.find((user: { email: string; password: string; }) => {  \n          return user.email === this.user.email && user.password === this.user.password;\n        });\n        },\n      error => {\n        console.error(error);\n      }\n    );\n\n    if (isLoggedIn) {\n      // Authentication success logic\n      console.log('Logged in successfully');\n    } else {\n      // Authentication error logic\n      console.error('Invalid credentials');\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center mt-5\">\n      <div class=\"col-md-6\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h4>Login</h4>\n          </div>\n          <div class=\"card-body\">\n            <form #LoginForm=\"ngForm\" (ngSubmit)=\"onSubmit(LoginForm)\">\n              <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"Enter your email\" [(ngModel)]=\"user.email\" name=\"email\">\n              </div>\n              <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Enter your password\" [(ngModel)]=\"user.password\" name=\"password\">\n              </div>\n              <div class=\"form-group\">\n                <button type=\"submit\" class=\"mt-3 btn btn-primary \">Login</button>\n              </div>\n            </form>\n          </div>\n          <div class=\"card-footer text-center\">\n            <p>Not registered? <a routerLink=\"/signup\">Create an account</a></p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}