{"ast":null,"code":"import { catchError, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nclass AuthService {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/signup';\n    this.isLoggedIn = false;\n  }\n  signup(name, email, password) {\n    const body = {\n      name,\n      email,\n      password\n    };\n    return this.http.post(this.apiUrl, body).pipe(catchError(this.handleError));\n    ;\n  }\n  login(email, password) {\n    return this.http.get(this.apiUrl).pipe(map(users => users.find(user => user.email === email && user.password === password)), catchError(this.handleError));\n  }\n  handleError(error) {\n    console.error('An error occurred', error);\n    return throwError(error);\n  }\n  getIsLoggedIn() {\n    return this.isLoggedIn;\n  }\n  setLoggedIn(value) {\n    this.isLoggedIn = value;\n  }\n  checkAuthentication() {\n    if (!this.isLoggedIn) {\n      this.router.navigate(['/auth']);\n    }\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["catchError","map","AuthService","constructor","router","http","apiUrl","isLoggedIn","signup","name","email","password","body","post","pipe","handleError","login","get","users","find","user","error","console","throwError","getIsLoggedIn","setLoggedIn","value","checkAuthentication","navigate","i0","ɵɵinject","i1","Router","i2","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/parthkawatra/Desktop/web_projects/angular/angular-forms/src/app/auth/auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, catchError, map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:3000/signup';\n\n isLoggedIn = false;\n\n  constructor(private router: Router, private http: HttpClient) {}\n\n  signup(name: string, email: string, password: string) {\n    const body = { name, email, password };\n    return this.http.post(this.apiUrl, body).pipe(\n      catchError(this.handleError);\n    ); \n  }\n    \n  login(email: string, password: string): Observable<any> {\n    return this.http.get<any[]>(this.apiUrl).pipe(\n      map(users => users.find(user => user.email === email && user.password === password)),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(error: any): Observable<any> {\n    console.error('An error occurred', error);\n    return throwError(error);\n  }\n\n getIsLoggedIn(): boolean {\n    return this.isLoggedIn;\n  }\n\n  setLoggedIn(value: boolean): void {\n    this.isLoggedIn = value;\n  }\n\n  checkAuthentication(): void {\n    if (!this.isLoggedIn) {\n      this.router.navigate(['/auth']);\n    }\n  }\n\n}\n"],"mappings":"AAGA,SAAqBA,UAAU,EAAEC,GAAG,QAAQ,MAAM;;;;AAElD,MAGaC,WAAW;EAKtBC,YAAoBC,MAAc,EAAUC,IAAgB;IAAxC,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IAJxC,KAAAC,MAAM,GAAG,8BAA8B;IAEhD,KAAAC,UAAU,GAAG,KAAK;EAE8C;EAE/DC,MAAMA,CAACC,IAAY,EAAEC,KAAa,EAAEC,QAAgB;IAClD,MAAMC,IAAI,GAAG;MAAEH,IAAI;MAAEC,KAAK;MAAEC;IAAQ,CAAE;IACtC,OAAO,IAAI,CAACN,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,MAAM,EAAEM,IAAI,CAAC,CAACE,IAAI,CAC3Cd,UAAU,CAAC,IAAI,CAACe,WAAW,CAAC;IAC7B;EACH;EAEAC,KAAKA,CAACN,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACN,IAAI,CAACY,GAAG,CAAQ,IAAI,CAACX,MAAM,CAAC,CAACQ,IAAI,CAC3Cb,GAAG,CAACiB,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACV,KAAK,KAAKA,KAAK,IAAIU,IAAI,CAACT,QAAQ,KAAKA,QAAQ,CAAC,CAAC,EACpFX,UAAU,CAAC,IAAI,CAACe,WAAW,CAAC,CAC7B;EACH;EACQA,WAAWA,CAACM,KAAU;IAC5BC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,OAAOE,UAAU,CAACF,KAAK,CAAC;EAC1B;EAEDG,aAAaA,CAAA;IACV,OAAO,IAAI,CAACjB,UAAU;EACxB;EAEAkB,WAAWA,CAACC,KAAc;IACxB,IAAI,CAACnB,UAAU,GAAGmB,KAAK;EACzB;EAEAC,mBAAmBA,CAAA;IACjB,IAAI,CAAC,IAAI,CAACpB,UAAU,EAAE;MACpB,IAAI,CAACH,MAAM,CAACwB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;EAEnC;;AArCW1B,WAAW,C;mBAAXA,WAAW,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;AAAXhC,WAAW,C;SAAXA,WAAW;EAAAiC,OAAA,EAAXjC,WAAW,CAAAkC,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPnC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}